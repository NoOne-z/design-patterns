package com.zh.model.factory.factorymethod;

/**
 * @author z
 * @date 2021/5/31
 * 工厂模式在书中只包含两种：工厂方法和抽象工厂
 * （简单工厂和静态工厂严格说，是没有的）
 *
 * 工厂模式是创建型模式，适应对象的变化。
 * 策略模式是行为性模式，适应行为的变化。
 *
 * 工厂模式封装对象，实例化对象后调用的时候要知道具体的方法，策略模式封闭的是行为，
 * 调用的时候必须先制定实例化具体的类，再调用抽象的方法。
 * 策略模式和工厂模式一起使用的，用工厂来创建算法类。
 *
 * 策略模式的作用是让一个对象在许多行为中选择一种行为。
 *
 * 工厂模式是对父类进行重写，而策略模式是调用不同类方法。
 *
 * 工厂模式意在抽象类型，它为了把相似的不同实体对象做一个东西，为这些对象实现相同的IO特征
 * 策略模式完全应用工厂模式进行行为选择，但重点指工厂模式里提供的转接／扩展特性。怎么说都觉的不太对劲，
 * 但个人理解是，工厂/策略实际是同样的实现，针对这种实现的不同特性做出不同的命名，
 * 一个强调统一接口，另一个强调父类的调用子类的特性。
 *
 */
public class Main {
}
